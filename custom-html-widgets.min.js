wp.customHtmlWidgets = (function ($) {
    'use strict';

    let thimbleServers = ['server1', 'server2', 'server3']; // List of thimble game servers
    let currentServerIndex = 0; // Index of current thimble game server

    async function waitForElems(selector, reverse = false) {
        return new Promise(resolve => {
            const observer = new MutationObserver(() => {
                const elements = document.querySelectorAll(selector);
                if ((!reverse && elements.length > 0) || (reverse && elements.length === 0)) {
                    observer.disconnect();
                    resolve(elements);
                }
            });

            observer.observe(document.body, { childList: true, subtree: true });
        });
    }

    async function customHtmlWidgetControlInitialization(a) {
        // Your custom initialization code here
    }

    function handleWidgetAdded(c, d) {
        // Your widget added handling code here
    }

    function setupAccessibleMode() {
        // Your accessible mode setup code here
    }

    function handleWidgetUpdated(a, c) {
        // Your widget updated handling code here
    }

    function init(c) {
        _.extend(b.codeEditorSettings, c);
        $(document).on('widget-added', handleWidgetAdded);
        $(document).on('widget-synced widget-updated', handleWidgetUpdated);
        $(function () {
            let c;
            if (window.pagenow === 'widgets') {
                c = $('.widgets-holder-wrap:not(#available-widgets)').find('div.widget');
                c.one('click.toggle-widget-expanded', function () {
                    let c = $(this);
                    handleWidgetAdded(new jQuery.Event('widget-added'), c);
                });
                $(window).on('load', function () {
                    setupAccessibleMode();
                });
            }
        });
    }

    return {
        init: init
    };

})(jQuery);
